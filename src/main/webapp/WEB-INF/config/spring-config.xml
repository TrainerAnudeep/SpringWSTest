<?xml version="1.0" encoding="UTF-8"?>

  <beans xmlns="http://www.springframework.org/schema/beans"  
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
            xmlns:context="http://www.springframework.org/schema/context"  
            xmlns:sws="http://www.springframework.org/schema/web-services"  
            xsi:schemaLocation="http://www.springframework.org/schema/beans  
                                     http://www.springframework.org/schema/beans/spring-beans.xsd  
                                     http://www.springframework.org/schema/web-services  
                                     http://www.springframework.org/schema/web-services/web-services.xsd  
                                     http://www.springframework.org/schema/context  
                                     http://www.springframework.org/schema/context/spring-context.xsd">  
       <context:component-scan base-package="com.examples" />  
       <sws:annotation-driven />  
      
      <!--Use of DefaultWsdl11Definition enables automated WSDL generation. 
      Spring uses the schema definitions listed in the schemaCollection property, 
      as well as the portType, serviceName and locationUri to generate a WSDL file the 
      first time it is requested. Although this is a powerful feature it should be used 
      with caution in production as the WSDL generation process can be quite slow. 
      An approach I've used in the past is to copy the generated WSDL from your 
      browser to your project and expose it using Springs static WSDL support with <static-wsdl>. 
        -->
      <bean id="AccountDetailsService" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition" lazy-init="true">
      	<property name="schemaCollection">
      		<bean class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
      			<property name="inline" value="true" />
      			<property name="xsds">
      				<list>
      					<value>schemas/AccountDetailsServiceOperation.xsd</value>
      				</list>
      			</property>
      		</bean>
      	</property>
      	<property name="portTypeName" value="AccountDetailsService" />
      	<property name="serviceName" value="AccountDetailsServices" />
      	<property name="locationUri" value="/endpoints" />
      </bean>
	</beans>